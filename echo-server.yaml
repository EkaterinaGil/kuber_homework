---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-server
  labels:
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: echo-server
    app.kubernetes.io/version: "v2.0"
    app.kubernetes.io/component: application
    app.kubernetes.io/managed-by: manual
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-server
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/manage/prometheus"
        prometheus.io/port: "8080"
      labels:
        app: echo-server
        app.kubernetes.io/name: echo-server
        app.kubernetes.io/instance: echo-server
        app.kubernetes.io/version: "v2.0"
        app.kubernetes.io/component: application
        app.kubernetes.io/managed-by: manual
    spec:
      containers:
        - name: echo-server
          image: "romanowalex/echo-server:v2.0"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "1024Mi"
              cpu: "500m"
            limits:
              memory: "1024Mi"
              cpu: "1"
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "simple"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=75.0 "
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 5
            httpGet:
              path: /manage/health/readiness
              port: 8080
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 5
            httpGet:
              path: /manage/health/readiness
              port: 8080
          ports:
            - name: java-service
              containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: echo-server
  labels:
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: echo-server
    app.kubernetes.io/version: "v2.0"
    app.kubernetes.io/component: application
    app.kubernetes.io/managed-by: manual
spec:
  selector:
    app: echo-server
  ports:
    - name: java-service
      port: 8080
      targetPort: java-service
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-server
  labels:
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: echo-server
    app.kubernetes.io/version: "v2.0"
    app.kubernetes.io/component: application
    app.kubernetes.io/managed-by: manual
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "echo-server.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echo-server
                port:
                  number: 8080
